一个int类型的整数：123456789

进制               值

二进制           00000111  01011011  11001101  00010101
十六进制        0x07          0x5B　       0xCD　      0x15
最左边的叫高字节，00000111 即 0x07
最右边的叫低字节，00010101 即 0x15

不管具体字节顺序是以什么方式排列，内存地址的分配一般是从小到大的增长。我们常把0x1000称为低地址端，把0x1003称为高地址端

大端：高字节存放在低地址，低字节存放在高地址（大端从左往右，很符合人的思维）

小端：低字节存放在低地址，高字节存放在高地址（低放低，大端的逆序）

TCP/IP各层协议 一般都是大端 , 而我们常用的计算机，一般都是小端。

如果是做跨平台开发时，双方需要协商好字节序，然后根据程序运行的环境，确定是否需要字节序转换。例如约定的通讯字节序为大端，默认的windows采用的小端，那收到数据后就需要做转换操作。

网络字节序(Network Order)：TCP/IP各层协议将字节序定义为大端（Big Endian），因此TCP/IP协议中使用的字节序通常称之为网络字节序。
主机字节序(Host Order)：整数在内存中保存的顺序，它遵循小端（Little Endian）规则（不一定，要看主机的CPU架构，不过大多数都是小端）。所以当两台主机之间要通过TCP/IP协议进行通信的时候就需要调用相应的函数进行主机序列(Little Endian)和网络序(Big Endian)的转换。

编译的核心思想就是通过一步步的转换逐渐的把高级语言翻译到汇编语言